version: '3.9'

networks:
    global-application-network:

    local-application-network:
        name: sun-network

services:

    php:
        container_name: app.application.php
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
            args:
              APP_ENV: ${APP_ENV}
        volumes:
            - ./:/var/www/html
            - ./docker/php/conf.d/custom.ini:/usr/local/etc/php/conf.d/custom.ini
        networks:
            - local-application-network

    apache:
      container_name: app.application.apache
      build: './docker/apache/'
      depends_on:
        - php
        - database
      networks:
        - global-application-network
        - local-application-network
      ports:
        - "8080:80"
      restart: on-failure
      volumes:
        - ./:/var/www/html/

    database:
      container_name: app.application.database
      image: mariadb:10.4.17
      working_dir: /var/www/html
      restart: always
      networks:
        - global-application-network
        - local-application-network
      ports:
        - "3306:3306"
      environment:
        MYSQL_ROOT_PASSWORD: secret
        MYSQL_DATABASE: app
      command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
      volumes:
        - database_data:/var/lib/mysql
        - ./docker/database/my.cnf:/etc/mysql/conf.d/custom.cnf
        - ./docker/database/var/database.sql:/docker-entrypoint-initdb.d/1.sql
        - ./docker/database/var/dump.sql:/docker-entrypoint-initdb.d/2.sql

    redis:
      container_name: app.application.redis
      image: redis:6.2.6
      restart: always
      networks:
        - local-application-network
      environment:
        - REDIS_REPLICATION_MODE=master
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data
        - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      command: redis-server --requirepass secret

volumes:
    database_data:
    elasticsearch_data:
    redis_data: